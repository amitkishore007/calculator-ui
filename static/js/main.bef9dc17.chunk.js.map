{"version":3,"sources":["Components/ui-box/TextArea/TextArea.js","Components/Result/Result.js","Components/ui-box/Button/Button.js","constants/Operators.js","Components/NumPad/NumPad.js","Containers/Calculator.js","App.js","serviceWorker.js","index.js"],"names":["TextArea","props","readOnly","value","Result","className","result","operations","Button","onClick","click","children","OPERATORS","PLUS","MINUS","EQUAL","DIVISION","MULTIPLY","DECIMAL","CLEAR","isOperator","op","flag","Object","keys","forEach","key","NUMPAD_BUTTONS","NumPad","map","btn","Calculator","state","allowedDecimal","doAction","action","addOperator","calculate","addDecimal","addZero","clear","addNumbers","lastKey","length","pushOperator","push","setState","num","joinLastKey","pop","includes","slice","performMultiplyDevide","performSumMinus","toString","find","first","findIndex","val","Number","splice","this","join","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bef9dc17.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function TextArea(props) {\r\n    return (\r\n        <textarea readOnly value={props.value}></textarea>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport TextArea from '../ui-box/TextArea/TextArea';\r\n\r\nexport default function Result(props) {\r\n    return (\r\n        <div className=\"Result\">\r\n            { <p>={props.result}</p>}\r\n            <TextArea value={props.operations} />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Button(props) {\r\n    return (\r\n        <button onClick={props.click}>{props.children}</button>\r\n    )\r\n}\r\n","export const OPERATORS = {\r\n    PLUS: '+',\r\n    MINUS: '-',\r\n    EQUAL: '=',\r\n    DIVISION: '/',\r\n    MULTIPLY: '*',\r\n    DECIMAL: '.',\r\n    CLEAR: 'cls',\r\n};\r\n\r\nexport const ZERO = '0';\r\n\r\nexport const isOperator = (op) => {\r\n    let flag = false;\r\n    Object.keys(OPERATORS).forEach((key) => {\r\n        if(OPERATORS[key] === op) {\r\n            flag = true;\r\n        }\r\n    });\r\n\r\n    return flag;\r\n}\r\n\r\nexport const NUMPAD_BUTTONS = [\r\n    {key: 7 },\r\n    {key: 8 },\r\n    {key: 9 },\r\n    {key: OPERATORS.MULTIPLY },\r\n    {key: 4 },\r\n    {key: 5 },\r\n    {key: 6 },\r\n    {key: OPERATORS.MINUS },\r\n    {key: 1 },\r\n    {key: 2 },\r\n    {key: 3 },\r\n    {key: OPERATORS.PLUS },\r\n    {key: OPERATORS.DIVISION },\r\n    {key: ZERO },\r\n    {key: OPERATORS.DECIMAL },\r\n    {key: OPERATORS.EQUAL },\r\n    {key: OPERATORS.CLEAR },\r\n];","import React from 'react'\r\nimport Button from '../ui-box/Button/Button';\r\nimport { NUMPAD_BUTTONS } from '../../constants/Operators';\r\n\r\nexport default function NumPad({click}) {\r\n    return (\r\n        <div className=\"NumPad\">\r\n            { NUMPAD_BUTTONS.map((btn) => {\r\n                return <Button key={btn.key} click={() => click(btn) }>{btn.key}</Button>\r\n            }) }\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport Result from '../Components/Result/Result';\r\nimport NumPad from '../Components/NumPad/NumPad';\r\nimport { OPERATORS, isOperator, ZERO } from '../constants/Operators';\r\n\r\n\r\nexport default class Calculator extends Component {\r\n\r\n    state = {\r\n        result: null,\r\n        operations: [],\r\n        allowedDecimal: true\r\n    }\r\n\r\n    doAction = (action) => {\r\n        switch (action.key) {\r\n            case OPERATORS.PLUS:\r\n            case OPERATORS.MINUS:\r\n            case OPERATORS.MULTIPLY: \r\n            case OPERATORS.DIVISION:\r\n                return this.addOperator(action.key);\r\n\r\n            case OPERATORS.EQUAL:\r\n                return this.calculate();\r\n            \r\n            case OPERATORS.DECIMAL: \r\n                return this.addDecimal(action.key);\r\n            \r\n            case ZERO: \r\n                return this.addZero(action.key);\r\n            \r\n            case OPERATORS.CLEAR:\r\n                return this.clear();\r\n\r\n            default: \r\n                return this.addNumbers(action.key);\r\n        }\r\n    }\r\n\r\n    addOperator = (key) => {\r\n        const lastKey = this.lastKey();\r\n        if (lastKey && !isOperator(lastKey) && lastKey[lastKey.length - 1] !== OPERATORS.DECIMAL) {\r\n            this.pushOperator(key);\r\n        }\r\n    }\r\n\r\n    lastKey = () => {\r\n        return this.state.operations[this.state.operations.length - 1];\r\n    }\r\n\r\n    pushOperator = (key) => {\r\n        let operations = [...this.state.operations];\r\n        operations.push(key + \"\");\r\n        this.setState({ operations: operations, allowedDecimal: true});\r\n    }\r\n\r\n    clear = () => {\r\n        this.setState({ operations:[], result:'', allowedDecimal: true});\r\n    }\r\n\r\n    addNumbers = (num) => {\r\n        let lastKey = this.lastKey();\r\n\r\n        if (!lastKey || isOperator(lastKey)) {\r\n\r\n            this.pushOperator((num));\r\n        \r\n        } else if (!isOperator(lastKey)) {\r\n        \r\n            this.joinLastKey(num);\r\n        }\r\n    }\r\n\r\n    joinLastKey = (key) => {\r\n        const operations = [...this.state.operations];\r\n\r\n        let last = operations.pop();\r\n\r\n        const result = (last + \"\")  + (key + \"\");\r\n\r\n        operations.push(result);\r\n\r\n        this.setState({ operations: operations, allowedDecimal: true});\r\n    }\r\n\r\n    addZero = (key) => {\r\n        \r\n        let lastKey = this.lastKey();\r\n\r\n        const operations = [...this.state.operations];\r\n\r\n        if (isOperator(lastKey) || !lastKey) {\r\n            operations.push(key);\r\n        } else if (lastKey !== '0' || lastKey.length > 1) {\r\n            operations[operations.length - 1] = operations[operations.length - 1] + key;\r\n        }\r\n\r\n        this.setState({ operations });\r\n    }\r\n\r\n    addDecimal = (key) => {\r\n        let lastKey = this.lastKey();\r\n        const operations = [...this.state.operations];\r\n\r\n        if (lastKey && lastKey.length > 0 && \r\n            !lastKey.includes(OPERATORS.DECIMAL) && \r\n            this.state.allowedDecimal && \r\n            !isOperator(lastKey)) {\r\n            operations[operations.length - 1] = operations[operations.length - 1] + key;\r\n            this.setState({operations: operations, allowedDecimal: false});\r\n        }\r\n    }\r\n\r\n    calculate = () => {\r\n\r\n        let operations = [...this.state.operations];\r\n        \r\n        if(!operations.length) return false;\r\n\r\n        let lastKey = this.lastKey();\r\n        if(isOperator(lastKey)) {\r\n           operations.pop();\r\n        }\r\n\r\n        if (lastKey[lastKey.length - 1] === '.') {\r\n            operations[operations.length - 1] = operations[operations.length - 1].slice(0, -1);\r\n            this.setState({allowedDecimal: true});\r\n        }\r\n\r\n        operations = this.performMultiplyDevide(operations);\r\n\r\n        operations = this.performSumMinus(operations);\r\n\r\n        if (operations[0] === 'NaN' || operations[0] === 'Infinity') {\r\n             operations = ['0'];\r\n        }\r\n        \r\n        let allowedDecimal = this.setState.allowedDecimal;\r\n        if (operations[0].includes('.')) {\r\n            allowedDecimal = false;\r\n        }\r\n\r\n        this.setState({ operations: [], result: operations.toString(), allowedDecimal: allowedDecimal});\r\n    }\r\n\r\n    performMultiplyDevide = (operations) => {\r\n        while(operations.find((op) => op === OPERATORS.MULTIPLY) || operations.find((op) => op === OPERATORS.DIVISION)) {\r\n\r\n            const first = operations.findIndex((val) => val === OPERATORS.MULTIPLY || val === OPERATORS.DIVISION);\r\n\r\n            if(operations[first] === OPERATORS.MULTIPLY) {\r\n                const result = Number(operations[first - 1]) * Number(operations[first + 1]);\r\n                operations.splice(first -1, 3, result.toString());\r\n            }\r\n\r\n            if(operations[first] === OPERATORS.DIVISION) {\r\n                const result = Number(operations[first - 1]) / Number(operations[first + 1]);\r\n                operations.splice(first -1, 3, result.toString());\r\n            }\r\n        }\r\n\r\n        return [...operations];\r\n    }\r\n\r\n    performSumMinus = (operations) => {\r\n        while(operations.find((op) => op === OPERATORS.PLUS) || operations.find((op) => op === OPERATORS.MINUS)) {\r\n\r\n            const first = operations.findIndex((val) => val === OPERATORS.PLUS || val === OPERATORS.MINUS);\r\n\r\n            if(operations[first] === OPERATORS.PLUS) {\r\n                const result = Number(operations[first - 1]) + Number(operations[first + 1]);\r\n                operations.splice(first -1, 3, result.toString());\r\n            }\r\n\r\n            if(operations[first] === OPERATORS.MINUS) {\r\n                const result = Number(operations[first - 1]) - Number(operations[first + 1]);\r\n                operations.splice(first -1, 3, result.toString());\r\n            }\r\n        }\r\n\r\n        return [...operations];\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Calculator\">\r\n                <h3>Calculator</h3>\r\n                <Result result={this.state.result} operations={this.state.operations.join(\"\")}/>\r\n                <NumPad click={this.doAction}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Calculator from './Containers/Calculator';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}